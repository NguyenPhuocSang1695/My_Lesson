int: dùng để lưu số nguyên kích thước 4buyt
thu vien stdio.h, iostream, math, bits/stdc++.h(bao gồm tất cả các thue viện trong c++), iomanip, algorithm (để sắp xếp mảng), mylibrary.h (tùy chỉnh), 
thu viện toán học math: pow(a,b) = a mũ b, sqrt đều trả về số double
----kiểu dữ liệu data type
số nguyên interger -2.10 mũ 9 tới 2.10 mũ 9
        longlong -.10  mũ 18 tới 9 nhân 10 mũ 18
số thực float 6 chữ số thập phân 32 bit
        double 15 chữ số thập phân 64 bit 
kí tự char character 1 byte
---- biến variliable
cách khai báo [Data type] [Tên biến];
ví dụ: longlong chuvi;
       int      dien tich;
       float    thetich;
       double   chuvihinhtron;
       char      kitudaibuoi;
       int      n = 1000;
       bool    dung sai
----quy tắt đặt tên biến
không đặt tên bắt đầu bằng chữ số
không có dấu cách va kì tự đặt biệt
không trùng với từ khóa (keyword trong ngôn ngữ lập trình) ví dụ interger, for, while...
chú thích dùng //
----và &&
dấu = là toán tử gán
cú pháp x=y lấy giá trị của y gán cho x ( lấy thằng bên phải gán cho bên trái)
dấu chia /, dấu chia có dư %
-setprecition: độ chính xác (lấy bao nhiêu chữ số thâp phân) 
ví dụ setprecition(3) 2.333
---- ép kiểu
ví dụ double thuong = a/b
----->> double thuong = (double)a/b hoặc double thuong = (float)a/b
nhân 2 số mà kết quả vượt ngưỡng của kiểu dữ liệu (longlong, int...) thì phải ép kiểu
----kiểu dữ liệu bool (đúng, sai)
                 số nguyên (longlong, interger...)
                 số thực   (double, float...)
                 đúng/sai [bool(tất cả các số khác không được coi là đúng)]
----cổng logic
and && chỉ đúng khi cả 2 cùng đúng
or  || chỉ sai khi cả 2 cùng sai
not  ! phủ định của cái này là cái kia
----cấu trúc rẽ nhánh if() dieu kien phai dung == vi = la gan
 if(điều kiện (n==x))
 {
 code 
 }
 code!
nếu điều kiện đúng thì code chạy
nếu không có else thì code! chạy
nếu điều kiện sai (có else) thì: code1 chạy
else
{
code1
}
muốn thực hiện cái gì đó trước thì nên đưa nó vào dấu ()
if(ddk1)
{code2}
else if (ddk2)
{code3}
...
else if(điều kiện n)
nếu cái tích bị tràn thì nhân thêm 1LL
tìm max min nhiều số thì nên nén vào trong dấu {}
---vòng lặp for , while do while
for (khai báo biến; điều kiện (không nhất thiết phải là biểu thức logic miễn là đúng hoặc sai); thay đổi giá trị của biến đếm sao mỗi vòng lặp)
vòng for check điều kiện trước
nếu điều kiện sai thì sẽ thực hiện câu lệnh dưới vòng for
nếu điều kiện đúng thì sẽ chạy code và tiếp tục quay lại check điều kiện
{
code
}
code1
nếu điều kiện sai thì bỏ qua code chạy code 1
thỏa điều kiện thì code chạy (nếu điều kiện đúng)
 ví dụ for (int i = 1; i<100; i++)
{
cout << "xin chao moi nguoi";
}
cout << "dieu kien sai me roi thang ngu";
-Tính tổng thì phải khởi tạo bằng 0 để tránh giá trị rác
-Tính tích thì khởi tạo bằng 1 để nhân không bị thay đổi kết quả
--Duyệt số chẵn cho bước nhảy bằng 2 
   for (int i=2;i<=n;i=+2)
    {
     S+=i
    }
-----Câu lệnh Break dùng để kết thúc vòng for
  if ( điêu kiện )
   break;
===================================
for (int i = 1; i <= 100; i++)
{
	cout << i << endl ;
 
	break;
	cout << "sang dep trai";
}
 ket qua cua vong for nay la 1 vi vong FOR vua chay de in ra 1 va gap cau lenh BREAK nen dung lai
==================================
---- cauau lệnh CONTINUE không có phép thực hiện các câu lệnh bên dưới câu lệnh CONTINUE
ví dụ 
  for (int i=q; i<=100 ; i++)
   cout << "hello cac cau;
   continue;
   cout << "khong in duoc nua"
vòng for khi gặp continue thì sẽ không thực hiện câu leenhjk cout << "khong in duoc nua"; mà quay lại chekc điều kiện i<=100; i++
KHÔNG NÊN LẠM DỤNG VÒNG FOR
----câu lệnh while 
 while (điều kiện lặp)
{
  code
}
 VÍ DỤ
while (n>=5)
{
 cout << n << enđl;
 --n
}
check điều kiện sau đó chạy code xong tiếp tục check điều kiện nếu đùng thì thực hiện, nếu sai thì kết thúc
===========================
bằng ==
không bằng !=
and &&
or ||
not !
===============
sau dấu : là sai
[] truycập vào phần tử của mảng
hàm VOID không cần return
=============================
getline(nguồn vào (cin, cout,...), xâu mà mình muốn đọc)
để getline không bị trôi phải loại bỏ phím enter dùng ignore(số kí tự cần bỏ);
========================
Vecto <Kieu du lieu> ten_vecto;
truy cập đến phần tử cuối tenvecto[tenvecto.size() -1] hoặc tenvecto.back()
tenvecto.push_back(n) đẩy phần tử n vào vecto
Duyệt qua index for (int x : tenvecto)
Duyet qua interator for (vecto <int> :: interator i = tenvecto.begin(); i != tenvector.end(); i++ )
vector <int> v(n,100): có n phần tử 100
=======================
-Cách tìm mã ascii của một kí tự
  gán một giá trị kiểu int cho chuỗi đó (int giatri = chuoi)
in ra gia tri vua gan
-Cách fix lỗi assigment of read only location: bỏ const ở phần khai báo
-Kí tự in hoa toupper()
-Kí tự thường tolower()
====================
++i: tang gia tri i len 1 roi return i
i++: return i sau do tang i len 1





